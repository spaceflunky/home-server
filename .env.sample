# Base
DOMAIN_NAME=domain.tld
APPS_DOMAIN=apps.domain.tld
# Set this to the same as above in most cases unless you have a weird use case
API_DOMAIN=apps.domain.tld

# Path to apps data directory
DATA_DIR=/data

# General
PUID=1000
PGID=1000
TZ=America/New_York

# cloudflair-ddns
CF_DDNS_API_KEY=
CF_DDNS_SUBDOMAIN=
CF_DDNS_DOMAIN=

# Duplicati
DUPLICATI_HOME_DIR=/home/username

# Transmission
BT_USER=
BT_PASS=

# Flood
FLOOD_HOME=/data/flood

# Ombi
BASE_URL=/ombi #optional

# Gotify
GOTIFY_SERVER_PORT=8118
GOTIFY_SERVER_SSL_ENABLED=false
GOTIFY_SERVER_SSL_REDIRECTTOHTTPS=false

# Jellyfin
TV_DIR=/storage/tv
MOVIES_DIR=/storage/movies
MUSIC_DIR=/storage/music

# Wireguard

# If the environment variable PEERS is set to a number or a list of strings
# separated by comma, the container will run in server mode and the
# necessary server and peer/client confs will be generated.
# The peer/client config qr codes will be output in the docker log.
# They will also be saved in text and png format under /config/peerX
# in case PEERS is a variable and an integer or /config/peer_X in case a 
# list of names was provided instead of an integer.
#
# To add more peers/clients later on, you increment the PEERS environment
# variable or add more elements to the list and recreate the container.

VPN_PEERS=1

# Variables SERVERURL, SERVERPORT, INTERNAL_SUBNET and PEERDNS are optional
# variables used for server mode. Any changes to these environment variables
# will trigger regeneration of server and peer confs. Peer/client confs will
# be recreated with existing private/public keys. Delete the peer folders
# for the keys to be recreated along with the confs.

VPN_SERVERURL=vpn.domain.tld